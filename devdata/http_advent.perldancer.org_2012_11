<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-type" content="text/html; charset=utf-8" />
<title> Simple, but more flexible, CRUD | PerlDancer Advent Calendar</title>
<link rel="stylesheet" href="/css/style.css" />
<link rel="alternate" type="application/rss+xml" title="All Articles " href="/feed/2012" /> 


<!-- Grab Google CDN's jQuery. fall back to local if necessary -->
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript">/* <![CDATA[ */
    !window.jQuery && document.write('<script src="/javascripts/jquery.js"><\/script>')
/* ]]> */</script>

<!-- Prettyfy -->
<link href="/css/prettify.css" type="text/css" rel="stylesheet" />
<script type="text/javascript" src="/javascripts/prettify.js"></script>

</head>
<body onload="prettyPrint()">
<div id="page">

<div id="sidebar">
<a href="/" class="homelink">Dancer Advent Calendar</a><br />

<p>
The PerlDancer Advent Calendar is a community-driven project that aims 
to showcase the Dancer Perl web framework.
</p>

<p>
Each day of December until Christmas, one article about Dancer. Stay tuned for new moves!
</p>

<ul id="sidebar-items">
<li>
    <h3>About Dancer</h3>
    <ul class="links">
        <li><a href="http://www.perldancer.org/">Dancer homepage</a></li>
        <li><a href="http://twitter.com/PerlDancer">Official Twitter</a></li>
        <li><a href="http://github.com/PerlDancer/Dancer">Dancer on GitHub</a></li>
        <li><a href="http://github.com/PerlDancer/Dancer2">Dancer 2 on GitHub</a></li>
        <li><a class="feed" href="/feed/2012">RSS</a></li>
    </ul>
</li>
</ul>
</div>


<div id="content">
<div class="pod-document"><h1><a name="simple__but_more_flexible__crud"></a>Simple, but more flexible, CRUD</h1>

<p>I've <a href="http://advent.perldancer.org/2011/2">wrote last year</a> about my
<a href="https://metacpan.org/module/Dancer::Plugin::SimpleCRUD">Dancer::Plugin::SimpleCRUD</a>, which offers simple and easy automatic CRUD
operations for Dancer apps.</p>
<p>So, if you don't know about it yet, have a read of that post first; there seems
no point in duplicating its content here.</p>
<h2><a name="so__what_s_new"></a>So, what's new?</h2>

<p>A quick rundown of some of the useful new features added to the SimpleCRUD
plugin this year, by myself and contributors:</p>
<ul>
<li><a name="item_custom_columns_feature"></a><b>custom_columns feature</b>
<p>Courtesy of Michael J South (msouth), this new feature allows the record listing
screen to include custom columns, built up using SQL statements if required or
simple column names, with transformations to be passed to
<a href="https://metacpan.org/module/HTML::Table::FromDatabase">HTML::Table::FromDatabase</a> to transform the contents easily (for instance,
wrapping email addresses/URLs in anchor tags, formatting, etc).</p>
</li>
<li><a name="item_add_edit_row_hook"></a><b>add_edit_row hook</b>
<p>A new feature suggested / requested by Rene on IRC; a hook which fires right
before a new row is created / an existing row is edited, letting you massage the
data before it hits the database.</p>
</li>
<li><a name="item_basic_foreign_key_support"></a><b>basic foreign key support</b>
<p>A new option to let you specify that certain columns are foreign keys, and
describe which table they refer to, and which columns in the foreign table
should be used as the key and the label, respectively.</p>
<p>For an example, from the example app shipped with the plugin (some settings
omitted for brevity, see the
<a href="https://github.com/bigpresh/Dancer-Plugin-Auth-Extensible/blob/master/example/config.yml">full config on GitHub</a>:</p>
<pre class="prettyprint">simple_crud(
    db_table =&gt; 'people',
    ...
    foreign_keys =&gt; {
        employer_id =&gt; {
            table        =&gt; 'employer',
            key_column   =&gt; 'id',
            label_column =&gt; 'name',
        },
    },
    ...
);</pre>

<p>The above example means that the column <code>employer_id</code> in the <code>people</code> table
refers to the key column <code>id</code> of the <code>employer</code> table, and that the <code>name</code>
column of the <code>employer</code> table should be used for the labels when selecting a
user's employer when adding/editing records.</p>
<p>In a future version, it may be possible for this to be done automatically by
inspecting the database schema, but I'm not sure how it could decide which
column(s) of the foreign table is the human-friendly name/description/whatever.</p>
</li>
<li><a name="item_new_input_types_option"></a><b>new input_types option</b>
<p>Default form field types are selected automatically, and will usually be
appropriate, but the <code>input_types</code> option lets you override the default choices
if you wish.</p>
</li>
<li><a name="item_auto_pretty_headers"></a><b>auto_pretty_headers</b>
<p>Uses a new feature in <a href="https://metacpan.org/module/HTML::Table::FromDatabase">HTML::Table::FromDatabase</a>, <code>auto_pretty_headers</code>, to
automatically make table headers prettier when displaying records - for
instance, <code>first_name</code> would become <code>First Name</code>.</p>
</li>
<li><a name="item_various_bugfixes"></a><b>various bugfixes</b>
<p>Various bug fixes, including issues if the prefix changes after the
<code>simple_crud</code> call, and working properly with named database connections.</p>
</li>
</ul>
<p>Many thanks to the contributors mentioned above for their valued contributions!</p>
<h2><a name="sorry_for_lateness___"></a>Sorry for lateness...</h2>

<p>Unfortunately, work, personal commitments and hangovers conspired against me,
and I ended up being late writing this post.  Sorry.</p>
<h1><a name="author"></a>AUTHOR</h1>

<p>David Precious (bigpresh)</p>
</div>

 <div id="disqus_thread"></div>
    <script type="text/javascript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'danceradvent'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>




</div>



<div id="footer">
Powered by the  
<a href="http://perldancer.org/" title="Perl Dancer - Perl web framework">
Dancer Perl web framework</a>
</div>
</div>


<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-25174467-2']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</body>
</html>
