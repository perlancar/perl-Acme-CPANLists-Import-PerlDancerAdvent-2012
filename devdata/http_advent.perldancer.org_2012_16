<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-type" content="text/html; charset=utf-8" />
<title> Redesigning Dancer::Plugin::Auth::Extensible | PerlDancer Advent Calendar</title>
<link rel="stylesheet" href="/css/style.css" />
<link rel="alternate" type="application/rss+xml" title="All Articles " href="/feed/2012" /> 


<!-- Grab Google CDN's jQuery. fall back to local if necessary -->
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript">/* <![CDATA[ */
    !window.jQuery && document.write('<script src="/javascripts/jquery.js"><\/script>')
/* ]]> */</script>

<!-- Prettyfy -->
<link href="/css/prettify.css" type="text/css" rel="stylesheet" />
<script type="text/javascript" src="/javascripts/prettify.js"></script>

</head>
<body onload="prettyPrint()">
<div id="page">

<div id="sidebar">
<a href="/" class="homelink">Dancer Advent Calendar</a><br />

<p>
The PerlDancer Advent Calendar is a community-driven project that aims 
to showcase the Dancer Perl web framework.
</p>

<p>
Each day of December until Christmas, one article about Dancer. Stay tuned for new moves!
</p>

<ul id="sidebar-items">
<li>
    <h3>About Dancer</h3>
    <ul class="links">
        <li><a href="http://www.perldancer.org/">Dancer homepage</a></li>
        <li><a href="http://twitter.com/PerlDancer">Official Twitter</a></li>
        <li><a href="http://github.com/PerlDancer/Dancer">Dancer on GitHub</a></li>
        <li><a href="http://github.com/PerlDancer/Dancer2">Dancer 2 on GitHub</a></li>
        <li><a class="feed" href="/feed/2012">RSS</a></li>
    </ul>
</li>
</ul>
</div>


<div id="content">
<div class="pod-document"><h1><a name="redesigning_dancer__plugin__auth__extensible"></a>Redesigning Dancer::Plugin::Auth::Extensible</h1>

<p>Earlier in this advent calendar, <a href="http://advent.perldancer.org/2012/2">I wrote</a>
about <a href="https://metacpan.org/module/Dancer::Plugin::Auth::Extensible">Dancer::Plugin::Auth::Extensible</a>, a flexible authentication /
authorisation framework for Dancer apps.</p>
<p>The original design of this plugin used subroutine attributes to denote what is
required to access specific roles (e.g. "must be logged in", or "must have a
certain role").  This, I think, was a fairly clean and nice design, but several
people (whose opinions I trust) pointed out that subroutine attributes can be
fragile, and present some problems (including thread safety, issues running
under the debugger / <a href="https://metacpan.org/module/Devel::Cover">Devel::Cover</a> etc).</p>
<p>So, tonight I have redesigned the API for this plugin, to remove the use of
subroutine attributes and instead use new keywords - <code>require_login</code>,
<code>require_role</code>, <code>require_any_role</code> and <code>require_all_roles</code>.</p>
<p>Using the plugin now looks like:</p>
<pre class="prettyprint">get '/members' =&gt; require_login sub { ... };

get '/beer' =&gt; require_role BeerDrinker =&gt; sub { ... };</pre>

<p>This approach should be much more solid, and is, I think, as readable as before,
and perhaps "more Dancerish" too.</p>
<h2><a name="so__how_does_it_work"></a>So, how does it work?</h2>

<p>The various <code>require_*</code> keywords return a coderef which checks that the
requirements are met (e.g. the user is logged in, has the appropriate role(s)),
then executes the coderef given to them - i.e. your route handler.</p>
<p>This is more robust than the previous approach, and should work just fine under
threads, when debugging, when running Devel::Cover etc.</p>
<h2><a name="tested"></a>Tested?</h2>

<p>I have tested it myself, and added some more tests to the plugin's test suite;
all tests pass correctly.  I would very much value reports from anyone who wants
to try it out, and would also appreciate any other tests that people think
should be added to the module's tests.</p>
<h1><a name="author"></a>AUTHOR</h1>

<p>David Precious (BIGPRESH)</p>
</div>

 <div id="disqus_thread"></div>
    <script type="text/javascript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'danceradvent'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>




</div>



<div id="footer">
Powered by the  
<a href="http://perldancer.org/" title="Perl Dancer - Perl web framework">
Dancer Perl web framework</a>
</div>
</div>


<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-25174467-2']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</body>
</html>
